# docker node update --label-add consul=1 <Id1 of swarm manager>
# docker node update --label-add consul=2 <Id2>
# docker node update --label-add consul=3 <Id3>

version: '3.7'


services:

  #
  # Consul Cluster
  #
  consul:
    image: consul
    environment:
      - CONSUL_CLIENT_INTERFACE=eth0
      - CONSUL_BIND_INTERFACE=eth0
    command: agent -server -bootstrap-expect=3  -retry-join=consul
    networks:
      - saas
    deploy:
      mode: global
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.role == manager

  #
  # Registrator on each node
  #
  registrator:
    image: gliderlabs/registrator:latest
    command: -internal consul://consul:8500
    networks:
      - saas
    depends_on:
      - consul
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /tmp/docker.sock
    deploy:
        mode: global


  #
  # Nginx loadbalancer
  #
  nginx:
    image: g4bzh/ngx:latest
    networks:
      - saas
    environment:
      - CONSUL_TEMPLATE_LOG=debug
    ports:
      - target: 53
        published: 53
        protocol: tcp
      - target: 53
        published: 53
        protocol: udp
    depends_on:
      - consul
    deploy:
      mode: global
  #
  # MongoDB Master
  # mkdir /mongodb
  #
  mongodbPrimary:
    image: bitnami/mongodb:latest
    networks:
      - saas
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
    volumes:
      - mongodb_data:/bitnami
    deploy:
      placement:
        constraints:
          - node.role == manager
          - node.labels.mongodb == primary


  #
  # MongoDB Secondary
  #
  mongodbSeconday:
    image: bitnami/mongodb:latest
    networks:
      - saas
    depends_on:
      - mongodbPrimary
    environment:
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodbPrimary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
          - node.labels.mongodb != primary

  #
  # MongoDB arbitrer
  #
  mongodbArbiter:
    image: bitnami/mongodb:latest
    networks:
      - saas
    depends_on:
      - mongodbPrimary
    environment:
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_PRIMARY_HOST=mongodbPrimary
      - MONGODB_PRIMARY_PORT_NUMBER=27017

networks:
  saas:
    driver: overlay
    ipam:
      config:
      - subnet: 242.0.0.0/8

volumes:
  mongodb_data:
    driver: local
