# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.define "swarm02" do |swarm02|

    swarm02.vm.box = "debian/contrib-stretch64"
    swarm02.vm.network "private_network", ip:"192.168.10.2"
    swarm02.vm.hostname = "swarm02"
    swarm02.vm.network "forwarded_port", guest: 22, host: 2202, id:"ssh"
    swarm02.vm.provision "shell", path: "provisionSwarm.sh"

  end

  config.vm.define "swarm03" do |swarm03|

    swarm03.vm.box = "debian/contrib-stretch64"
    swarm03.vm.network "private_network", ip:"192.168.10.3"
    swarm03.vm.hostname = "swarm03"
    swarm03.vm.network "forwarded_port", guest: 22, host: 2203, id:"ssh"
    swarm03.vm.provision "shell", path: "provisionSwarm.sh"

  end


  config.vm.define "swarm01" do |swarm01|

    swarm01.vm.box = "debian/contrib-stretch64"
    swarm01.vm.network "private_network", ip:"192.168.10.1"
    swarm01.vm.hostname = "swarm01"
    swarm01.vm.network "forwarded_port", guest: 22, host: 2201, id:"ssh"
    swarm01.vm.network "forwarded_port", guest: 8080, host: 8080
    swarm01.vm.network "forwarded_port", guest: 8081, host: 8081
    swarm01.vm.network "forwarded_port", guest: 8082, host: 8082
    swarm01.vm.network "forwarded_port", guest: 8053, host: 8053
    swarm01.vm.synced_folder "../services", "/services"
    swarm01.vm.provision "shell", path: "provisionSwarm.sh"

  end

  config.vm.define "dev", autostart: false do |dev|

    dev.vm.box = "debian/contrib-stretch64"
    dev.vm.network "forwarded_port", guest: 22, host: 2204, id:"ssh"
    dev.vm.network "forwarded_port", guest: 8080, host: 9080
    dev.vm.network "forwarded_port", guest: 8053, host: 9053
    dev.vm.provision "shell", path: "provisionDev.sh"
    dev.vm.synced_folder "../mongodb", "/mongodb"
    dev.vm.synced_folder "../services", "/services"

  end

end
